version: '3.8' # Specify a reasonably modern Docker Compose version

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0 # Use a specific, recent version
    container_name: elasticsearch_dev
    environment:
      - discovery.type=single-node # Crucial for development/single-node setup
      - xpack.security.enabled=false # Disable security for easy development access (NOT recommended for production)
      # - ES_JAVA_OPTS=-Xms512m -Xmx512m # Optional: Adjust JVM heap size if needed
    volumes:
      - /home/shamit/proj/wiki_search_data/elastic:/usr/share/elasticsearch/data # Mount host directory for data persistence
    ports:
      - "7020:9200" # Map host port 7020 to container port 9200 (ES default HTTP)
      # - "9300:9300" # Uncomment if you need external access to the transport port (rarely needed for single node)
    ulimits: # Recommended settings for Elasticsearch
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    restart: unless-stopped # Auto-start on reboot, unless manually stopped
    healthcheck: # Basic health check
        test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
        interval: 10s
        timeout: 5s
        retries: 5
    networks:
      - elastic-net # Connect to the custom network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0 # Use the same version as Elasticsearch
    container_name: kibana_dev
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200 # Point Kibana to the ES service name within the Docker network
    ports:
      - "7030:5601" # Map host port 7030 to container port 5601 (Kibana default)
    depends_on:
      elasticsearch:
        condition: service_healthy # Wait for Elasticsearch to be healthy before starting Kibana
    restart: unless-stopped # Auto-start on reboot, unless manually stopped
    networks:
      - elastic-net # Connect to the custom network

networks: # Define the custom network
  elastic-net:
    driver: bridge